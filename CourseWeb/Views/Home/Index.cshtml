@model CourseWeb.Models.Card
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Главная страница</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        font-face {
            font-family: 'Balkar';
            src: url('Balkar.ttf') format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        body {
            font-family: sans-serif;
        }

        header {
            background-color: #f0f0f0;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            header img {
                width: 200px;
                height: 100px;
                object-fit: cover;
            }

        header h1 {
            font-family: 'Balkar', 'Comic Sans MS', sans-serif;
            font-size: 54px;
            margin: 0;
            flex-grow: 1;
            text-align: center;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        .card {
            width: 1000px;
            height: 600px;
            border: 1px solid #ccc;
            /* Здесь будет содержимое карточки */
        }

        .buttons {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .actions {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .prev-button, .next-button {
            writing-mode: vertical-rl;
            text-orientation: upright;
            margin: 0 5px;
            width: 50px;
            height: 200px;
            font-weight: bold;
            font-size: 18px;
        }

            .prev-button:hover, .next-button:hover {
                background-color: yellow;
                color: black;
                
            }
        .delete-button, .add-button {
            margin: 0 5px;
        }

        .flip-button {
            margin: 0 5px;
        }

        .card-text {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            font-size: 24px;
            font-weight: bold;
        }

        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }
    </style>
</head>
<body>

    <header>
        <img src="Memento.jpg" alt="Помни">
        <h1>Запомни всё</h1>
        <img src="remember.jpeg" alt="Всё!">
    </header>

    <div class="container">
        <button class="btn btn-primary prev-button">Не помню</button>
        <div class="card">
            <p id="cardText" class="card-text">@Model.Front</p>
        </div>
        <button id="rememberButton" class="btn btn-primary next-button">Помню</button>
    </div>
    <div class="actions">
        <button class="btn btn-info flip-button" style="width: calc(50% - 5px);">Перевернуть карточку</button>
    </div>
    <div class="actions">        
        <button class="btn btn-success add-button">Добавить карточку</button>
        <button class="btn btn-danger delete-button">Удалить карточку</button>        
    </div>

    <!-- Модальное окно -->
    <div id="modal" class="modal">
        <h2>Добавить карточку</h2>
        <input type="text" id="frontInput" placeholder="Лицевая сторона">
        <input type="text" id="backInput" placeholder="Обратная сторона">
        <button id="okButton">ОК</button>
        <button id="cancelButton">Отмена</button>
    </div>

    <!-- Скрипт переворота карточки -->
    <script>
        var isFront = true;
        var frontText = '@Html.Raw(Model.Front)';
        var backText = '@Html.Raw(Model.Back)';

        function flipCard() {
            var cardText = document.getElementById('cardText');

            // Проверяем, пуста ли колода
            if (frontText === "") {
                return; // Если пуста, выходим из функции без переворота карточки
            }

            if (isFront) {
                cardText.innerHTML = backText;
            } else {
                cardText.innerHTML = frontText;
            }
            isFront = !isFront;
        }

        document.querySelector('.flip-button').addEventListener('click', flipCard);
    </script>

    <!-- Скрипт кнопки "Помню" -->
    <script>
        document.getElementById('rememberButton').addEventListener('click', function () {
            fetch('/Home/RememberClick', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data === null) {
                        // Если колода пуста, отображаем сообщение "Колода пуста"
                        document.getElementById('cardText').innerText = "Колода пуста";

                        // Очищаем значения переменных frontText и backText
                        frontText = "";
                        backText = "";
                    } else {
                        // Обновляем текст на лицевой стороне карточки
                        document.getElementById('cardText').innerText = data.front;

                        // Обновляем значения frontText и backText
                        frontText = data.front;
                        backText = data.back;

                        // Сбрасываем переменную isFront в true
                        isFront = true;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>

    <!-- Скрипт кнопки "Не помню" -->
    <script>
        document.querySelector('.prev-button').addEventListener('click', function () {
            fetch('/Home/NotRememberClick', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data !== null) {
                        // Обновляем текст на лицевой стороне карточки
                        document.getElementById('cardText').innerText = data.front;

                        // Обновляем значения frontText и backText
                        frontText = data.front;
                        backText = data.back;

                        // Сбрасываем переменную isFront в true
                        isFront = true;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>

    <!-- Скрипт кнопки "Удалить карточку" -->
    <script>
        document.querySelector('.delete-button').addEventListener('click', function () {
            fetch('/Home/DropCard', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data === null) {
                        // Если карточек больше нет, отображаем сообщение "Колода пуста"
                        document.getElementById('cardText').innerText = "Колода пуста";

                        // Очищаем значения переменных frontText и backText
                        frontText = "";
                        backText = "";
                    } else {
                        // Обновляем текст на лицевой стороне карточки
                        document.getElementById('cardText').innerText = data.front;

                        // Обновляем значения переменных frontText и backText
                        frontText = data.front;
                        backText = data.back;

                        // Сбрасываем переменную isFront в true
                        isFront = true;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    </script>

    <!-- Скрипт обработки нажатия клавиш -->
    <script>
        let isDelayActive = false;

        // Обработка нажатия клавиш
        document.addEventListener('keydown', function (event) {
            if (!isDelayActive) {
                isDelayActive = true;
                setTimeout(function () {
                    isDelayActive = false;
                }, 250); // 250ms delay

                // Снимаем текущее выделение
                document.getSelection().removeAllRanges();

                // Убираем фокус с активного элемента
                if (document.activeElement) {
                    document.activeElement.blur();
                }

                if (event.key === ' ') {
                    // Нажата клавиша пробел, повернуть карточку
                    flipCard();
                } else if (event.key === 'ArrowRight') {
                    // Нажата клавиша стрелка вправо, нажать кнопку "Помню"
                    document.getElementById('rememberButton').click();
                } else if (event.key === 'ArrowLeft') {
                    // Нажата клавиша стрелка влево, нажать кнопку "Не помню"
                    document.querySelector('.prev-button').click();
                }
            }
        });
    </script>

    <!-- Скрипт кнопки "Добавить карточку" -->
    <script>
        document.querySelector('.add-button').addEventListener('click', function () {
            console.log('Кнопка "Добавить карточку" была нажата');

            // Отображаем модальное окно
            document.getElementById('modal').style.display = 'block';
        });

        document.getElementById('cancelButton').addEventListener('click', function () {
            console.log('Кнопка "Отмена" была нажата');

            // Скрываем модальное окно
            document.getElementById('modal').style.display = 'none';
        });

        document.getElementById('okButton').addEventListener('click', function () {
            console.log('Кнопка "ОК" была нажата');

            // Получаем значения текстовых полей
            const frontText = document.getElementById('frontInput').value;
            const backText = document.getElementById('backInput').value;

            console.log('Значения полей:', frontText, backText);

            // Отправляем POST-запрос на сервер для добавления новой карточки
            fetch('/Home/AddCard', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ front: frontText, back: backText })
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Ответ от сервера:', data);

                    // Если карточка была успешно добавлена, просто скрываем модальное окно
                    if (data.success) {
                        // Скрываем модальное окно
                        document.getElementById('modal').style.display = 'none';
                    } else {
                        // Если произошла ошибка при добавлении карточки, отображаем сообщение об ошибке
                        alert('Ошибка при добавлении карточки: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Ошибка:', error);
                });
        });
    </script>

</body>
</html>